import type { NextPage } from 'next'
import Head from 'next/head'
import useAxios from 'axios-hooks'
import Image from 'next/image'
import { useForm } from 'react-hook-form'
import { useRouter } from 'next/router'

const Home: NextPage = () => {
  const router = useRouter()

  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm()

  const [{ data, loading, error }] = useAxios(
    'https://opentdb.com/api_category.php'
  )
  if (loading) return <h1>Loading...</h1>
  if (error) return <h1>Error!</h1>

  console.log('CATEGORY DATA', data.trivia_categories)

  const onSubmit = async (data: any) => {
    router.push(`/quiz/${data.Name}/${data.Category}/${data.Difficulty}`)
  }
  console.log(errors)
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <div className='min-h-screen bg-white flex'>
        <div className='flex-1 flex flex-col justify-center py-12 px-4 sm:px-6 lg:flex-none lg:px-20 xl:px-24'>
          <div className='mx-auto w-full max-w-sm lg:w-96'>
            <div>
              <h2 className='mt-6 text-3xl font-extrabold text-gray-900'>
                Open Trivia Quiz App
              </h2>
            </div>

            <div className='mt-8'>
              <div className='mt-6'>
                <form
                  method='POST'
                  className='space-y-6'
                  onSubmit={handleSubmit(onSubmit)}
                >
                  <div>
                    <label
                      htmlFor='text'
                      className='block text-sm font-medium text-gray-700'
                    >
                      Name
                    </label>

                    <div className='mt-1 relative'>
                      <input
                        type='text'
                        placeholder='Name'
                        {...register('Name', {
                          required: true,
                          maxLength: 80,
                        })}
                        className={`appearance-none block w-full px-3 py-2 border border-gray-300 ${
                          errors.Name
                            ? 'focus:ring-red-500 focus:border-red-500'
                            : 'focus:ring-indigo-500 focus:border-indigo-500'
                        } rounded-md shadow-sm placeholder-gray-400 focus:outline-none  sm:text-sm`}
                      />
                      <div
                        className={`${
                          errors.Name
                            ? 'absolute mr-1 text-red-500 inset-y-0 right-0 pr-3 flex items-center pointer-events-none'
                            : 'hidden'
                        }`}
                      >
                        <svg
                          xmlns='http://www.w3.org/2000/svg'
                          className='h-5 w-5'
                          viewBox='0 0 20 20'
                          fill='currentColor'
                        >
                          <path
                            fillRule='evenodd'
                            d='M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z'
                            clipRule='evenodd'
                          />
                        </svg>
                      </div>
                    </div>
                    <p
                      className={`${
                        errors.Name ? 'mt-2 text-sm text-red-600' : 'hidden'
                      }`}
                      id='email-error'
                    >
                      This Field is Empty!!
                    </p>
                  </div>

                  <div className='space-y-1'>
                    <label
                      htmlFor='category'
                      className='block text-sm font-medium text-gray-700'
                    >
                      Category
                    </label>
                    <div className=' relative mt-1'>
                      <select
                        className='bg-blue-100 mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md'
                        {...register('Category', { required: true })}
                      >
                        <option value=''>Select Category...</option>
                        {data.trivia_categories.map((category: any) => {
                          return (
                            <option key={category.id} value={category.id}>
                              {category.name}
                            </option>
                          )
                        })}
                      </select>
                      <div
                        className={`${
                          errors.Category
                            ? 'absolute mr-1 text-red-500 inset-y-0 right-0 pr-3 flex items-center pointer-events-none'
                            : 'hidden'
                        }`}
                      >
                        <svg
                          xmlns='http://www.w3.org/2000/svg'
                          className='h-5 w-5'
                          viewBox='0 0 20 20'
                          fill='currentColor'
                        >
                          <path
                            fillRule='evenodd'
                            d='M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z'
                            clipRule='evenodd'
                          />
                        </svg>
                      </div>
                    </div>
                    <p
                      className={`${
                        errors.Category ? 'mt-2 text-sm text-red-600' : 'hidden'
                      }`}
                      id='email-error'
                    >
                      This Field is Empty!!
                    </p>
                  </div>

                  <div className='space-y-1'>
                    <label
                      htmlFor='password'
                      className='block text-sm font-medium text-gray-700'
                    >
                      Difficulty
                    </label>
                    <div className='relative mt-1'>
                      <select
                        className=' bg-blue-100 mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md'
                        {...register('Difficulty', { required: true })}
                      >
                        <option value=''>Select Difficulty...</option>
                        <option value='Easy'>Easy</option>
                        <option value='Medium'>Medium</option>
                        <option value='Hard'>Hard</option>
                      </select>
                      <div
                        className={`${
                          errors.Difficulty
                            ? 'absolute mr-1 text-red-500 inset-y-0 right-0 pr-3 flex items-center pointer-events-none'
                            : 'hidden'
                        }`}
                      >
                        <svg
                          xmlns='http://www.w3.org/2000/svg'
                          className='h-5 w-5'
                          viewBox='0 0 20 20'
                          fill='currentColor'
                        >
                          <path
                            fillRule='evenodd'
                            d='M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z'
                            clipRule='evenodd'
                          />
                        </svg>
                      </div>
                    </div>
                    <p
                      className={`${
                        errors.Difficulty
                          ? 'mt-2 text-sm text-red-600'
                          : 'hidden'
                      }`}
                      id='email-error'
                    >
                      This Field is Empty!!
                    </p>
                  </div>

                  <div>
                    <button
                      type='submit'
                      className='w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'
                    >
                      Start Quiz
                    </button>
                  </div>
                </form>
              </div>
            </div>
          </div>
        </div>
        <div className='hidden lg:block relative w-0 flex-1'>
          <Image
            className='absolute inset-0 h-full w-full object-cover'
            src='/quiz1.png'
            layout='fill'
            alt=''
          />
        </div>
      </div>
    </div>
  )
}

export default Home
